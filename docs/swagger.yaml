basePath: /api/v1
definitions:
  model.Recipe:
    properties:
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      instructions:
        items:
          type: string
        type: array
      name:
        type: string
      publishedAt:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample recipes Api.
  title: Recipes API
  version: "1.0"
paths:
  /recipes:
    post:
      description: Create a new recipe by providing Recipe JSON data and store it
        in the database. Returns the saved recipe as JSON.
      parameters:
      - description: Recipe JSON
        in: body
        name: Recipe
        required: true
        schema:
          $ref: '#/definitions/model.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Recipe'
      summary: Create a New Recipe
    put:
      description: Update an existing recipe by providing updated Recipe JSON data.
        Returns updated recipe upon successful update.
      parameters:
      - description: Updated Recipe JSON
        in: body
        name: Recipe
        required: true
        schema:
          $ref: '#/definitions/model.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Recipe'
      summary: Update Recipe
  /recipes/{id}:
    delete:
      description: Delete a recipe by providing its unique identifier (ID). Returns
        a confirmation message upon successful deletion.
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete Recipe
  /recipes/search:
    get:
      description: Search for recipes based on specified tags. Returns a list of matching
        recipes.
      parameters:
      - description: Comma-separated list of tags for filtering
        in: query
        name: tags
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Recipe'
            type: array
      summary: Search Recipes
swagger: "2.0"
